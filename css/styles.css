/*
=============== 
Fonts
===============
*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans|Roboto:400,700&display=swap");

/*
=============== 
Variables
===============
*/

:root {
    /* dark shades of primary color*/
    --clr-primary-1: hsl(43, 86%, 17%);
    --clr-primary-2: hsl(43, 77%, 27%);
    --clr-primary-3: hsl(43, 72%, 37%);
    --clr-primary-4: hsl(42, 63%, 48%);
    /* primary/main color */
    --clr-primary-5: hsl(42, 78%, 60%);
    /* lighter shades of primary color */
    --clr-primary-6: hsl(43, 89%, 70%);
    --clr-primary-7: hsl(43, 90%, 76%);
    --clr-primary-8: hsl(45, 86%, 81%);
    --clr-primary-9: hsl(45, 90%, 88%);
    --clr-primary-10: hsl(45, 100%, 96%);
    /* darkest grey - used for headings */
    --clr-grey-1: hsl(209, 61%, 16%);
    --clr-grey-2: hsl(211, 39%, 23%);
    --clr-grey-3: hsl(209, 34%, 30%);
    --clr-grey-4: hsl(209, 28%, 39%);
    /* grey used for paragraphs */
    --clr-grey-5: hsl(210, 22%, 49%);
    --clr-grey-6: hsl(209, 23%, 60%);
    --clr-grey-7: hsl(211, 27%, 70%);
    --clr-grey-8: hsl(210, 31%, 80%);
    --clr-grey-9: hsl(212, 33%, 89%);
    --clr-grey-10: hsl(210, 36%, 96%);
    --clr-white: #fff;
    --ff-primary: "Roboto", sans-serif;
    --ff-secondary: "Open Sans", sans-serif;
    --transition: all 0.3s linear;
    --spacing: 0.25rem;
    --radius: 0.5rem;
    --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    --max-width: 1170px;
}
/*
=============== 
Global Styles
===============
*/

*,
::after,
::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body {
    font-family: var(--ff-secondary);
    background: var(--clr-white);
    color: var(--clr-grey-1);
    line-height: 1.5;
    font-size: 0.875rem;
}
ul {
    list-style-type: none;
}
a {
    text-decoration: none;
}
img:not(.nav-logo) {
    width: 100%;
    display: block;
}

h1,
h2,
h3,
h4 {
    letter-spacing: var(--spacing);
    text-transform: capitalize;
    line-height: 1.25;
    margin-bottom: 0.75rem;
    font-family: var(--ff-primary);
}
h1 {
    font-size: 3rem;
}
h2 {
    font-size: 2rem;
}
h3 {
    font-size: 1.25rem;
}
h4 {
    font-size: 0.875rem;
}
p {
    margin-bottom: 1.25rem;
    color: var(--clr-grey-5);
}
@media screen and (min-width: 800px) {
    h1 {
        font-size: 4rem;
    }
    h2 {
        font-size: 2.5rem;
    }
    h3 {
        font-size: 1.75rem;
    }
    h4 {
        font-size: 1rem;
    }
    body {
        font-size: 1rem;
    }
    h1,
    h2,
    h3,
    h4 {
        line-height: 1;
    }
}
/*  global classes */

.btn {
    text-transform: uppercase;
    background: var(--clr-primary-5);
    color: var(--clr-primary-1);
    padding: 0.375rem 0.75rem;
    letter-spacing: var(--spacing);
    display: inline-block;
    font-weight: 700;
    transition: var(--transition);
    font-size: 0.875rem;
    border: 2px solid transparent;
    cursor: pointer;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    border-radius: var(--radius);
}
.btn:hover {
    color: var(--clr-primary-1);
    background: var(--clr-primary-7);
}
/* section */
.section {
    padding: 5rem 0;
}

.section-center {
    width: 90vw;
    margin: 0 auto;
    max-width: 1170px;
}
@media screen and (min-width: 992px) {
    .section-center {
        width: 95vw;
    }
}

/* global properties added during tutorial */
/* for underline UI element */
.underline {
    width: 5rem;
    height: 0.25rem;
    margin-bottom: 1.25rem;
    background: var(--clr-primary-5);
    margin-left: auto;
    margin-right: auto;
}

/* for section-title - added when making about section */
.section-title {
    margin-bottom: 4rem;
    text-align: center;
}

/* for services section or any other section that needs a grey background */
.bg-grey {
    background: var(--clr-grey-10);
}

/*
=============== 
Navbar
===============
*/

.nav-links {
    display: none;
}

.nav {
    height: 5rem;
    padding: 1rem;
    display: grid;
    align-items: center;
    transition: var(--transition);
}

.nav-center {
    width: 100%;
    max-width: 1170px;
    margin: 0 auto;
}

.nav-header {
    display: grid;
    /* initial setup below.  But when you go above 768 it will introduce the second column for the nav-btn, which isn't something that we want as the header image and nav links should be side by side, rather than with space in-between them (i.e. the empty column that houses nav-btn */
    /* grid-template-columns: 1fr 1fr; */
    /* here's the amended setup below*/
    grid-template-columns: 1fr auto;
    /* it doesn't matter so much though because links will be pushed all the way to the right anyway, but could cause issues if there's more links and that space is still there */
    align-items: center;
}

.nav-btn {
    background: transparent;
    border-color: transparent;
    color: var(--clr-primary-5);
    font-size: 2rem;
    cursor: pointer;
    /* below is the flex-box syntax */
    /* justify-content:space-between */
    /* next is how to acheive the same result with grids (for 2 items) */
    justify-self: end;
}

@media screen and (min-width: 768px) {
    .nav {
        background: var(--clr-primary-10);
    }

    .nav-btn {
        display: none;
    }

    .nav-links {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        justify-items: center;
        -moz-column-gap: 2rem;
        column-gap: 2rem;
        justify-self: end;
    }

    .nav-links a {
        text-transform: capitalize;
        color: var(--clr-grey-1);
        font-weight: bold;
        letter-spacing: var(--spacing);
        transition: var(--transition);
    }

    .nav-links a:hover {
        color: var(--clr-primary-5);
    }

    .nav-center {
        display: grid;
        grid-template-columns: auto 1fr;
        align-items: center;
    }
}

/* fixed navbar */
.navbar-fixed {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background: var(--clr-white);
    z-index: 2;
    box-shadow: var(--light-shadow);
}

/*
=============== 
Sidebar
===============
*/

.sidebar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--clr-grey-10);
    z-index: 4;
    display: grid;
    /* align-items: center;
    justify-content: center; */
    /* below is the shorthand for the above 2 */
    place-items: center;
    transition: var(--transition);
    /* add later */
    transform: translateX(-100%);
}

.show-sidebar {
    transform: translateX(0);
}

.sidebar-links {
    text-align: center;
}

.sidebar-links a {
    font-size: 2rem;
    text-transform: capitalize;
    transition: var(--transition);
    color: var(--clr-grey-5);
    letter-spacing: var(--spacing);
    display: inline-block;
    margin-bottom: 1.5rem;
}

.sidebar-links a:hover {
    color: var(--clr-primary-5);
}

.social-icons {
    display: grid;
    margin-top: 3rem;
    width: 20rem;
    grid-template-columns: repeat(5, 1fr);
    justify-items: center;
}

.social-icon {
    font-size: 1.5rem;
    color: var(--clr-grey-1);
    transition: var(--transition);
}

.social-icon:hover {
    color: var(--clr-primary-5);
}

.close-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 3rem;
    background: transparent;
    border: transparent;
    transition: var(--transition);
    color: #bb2525;
    cursor: pointer;
}

.close-btn:hover {
    color: #e66b6b;
}

/*
=============== 
Hero
===============
*/
/* underline added to globals */

.hero .underline {
    /* overriding the styling of global underline for hero underline */
    margin-bottom: 0.5rem;
    margin-left: 0;
}

.hero-img {
    display: none;
}

.hero {
    background: var(--clr-primary-10);
}

.hero-center {
    min-height: calc(100vh - 5rem);
    display: grid;
    place-items: center;
}

.hero-info h4 {
    color: var(--clr-grey-5);
}

.hero-icons {
    justify-items: start;
}

.hero-btn {
    margin-top: 1.25rem;
}

@media screen and (min-width: 992px) {
    .hero-img {
        display: block;
        position: relative;
    }
    .hero-center {
        grid-template-columns: 1fr 1fr;
    }

    .hero-img::before,
    .about-img::before {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        border: 0.25rem solid var(--clr-primary-5);
        top: 2rem;
        right: -2rem;
        border-radius: var(--radius);
    }
}

.hero-photo {
    max-width: 25rem;
    max-height: 30rem;
    -o-object-fit: cover;
    object-fit: cover;
    border-radius: var(--radius);
    /* if relative position isn't added, then border will be in front */
    position: relative;
}

/*
=============== 
About
===============
*/
/* section title added to globals */

.about-title {
    text-align: left;
    /* decreasing bottom margin from larger default */
    margin-bottom: 2rem;
}

.about-title .underline {
    margin-left: 0;
}

/* below properties incur a risk with mobile devices, in case they don't use css grid.  E.g. the gap might not appear */
/* less risky option is to use margins, such as in services section */
.about-center {
    display: grid;
    gap: 3rem 2rem;
}

.about-img {
    justify-self: center;
}

@media screen and (min-width: 992px) {
    .about-center {
        grid-template-columns: 1fr 1fr;
    }
    .about-img {
        /* if this is not added, the offset border will attach itself to the nearest container with position relative, which appears to be everything from top of the screen to the start of the about page.
        I tried to figure out why, but so far I'm not sure.
        There doesn't appear to be any containers that cover this space, and certainly none that are set to relative. */
        position: relative;
    }
    .about-img::before {
        left: -2rem;
    }
    .about-info {
        align-self: center;
    }
}

/*
=============== 
Services
===============
*/
/* small screen layout setup */
/* bg-grey in globals */

.service {
    background: var(--clr-white);
    padding: 3rem 1.5rem;
    margin-bottom: 2rem;
    border-radius: var(--radius);
    text-align: center;
    transition: var(--transition);
}

.service-icon {
    font-size: 2rem;
    margin-bottom: 1.5rem;
}

.service .underline {
    width: 3rem;
    height: 0.12rem;
    transition: var(--transition);
}

/* unsure why the transition isn't inherited for below and above examples */
/* especially below example where no other properties are set */

.service p {
    transition: var(--transition);
}

.service:hover {
    background: var(--clr-primary-5);
    color: var(--clr-white);
    /* above on its own will not affect paragraph, as there is more specificity for the paragraph, being that it's set up in the global styles  */
}

/* the solution is to specifically set the hover properties for service>p */
/* below syntax means if you're hovering over the service section, but properties are applied to service>p */
/* this is in contrast to .service p:hover {} which would only apply these properties if you're hovering over the paragraph child, rather than the parent service container */

.service:hover p {
    color: var(--clr-white);
}

.service:hover underline {
    background: var(--clr-white);
}

@media screen and (min-width: 676px) {
    .services-center {
        display: grid;
        grid-template-columns: 1fr 1fr;
        -moz-column-gap: 2rem;
        column-gap: 2rem;
    }
}

@media screen and (min-width: 992px) {
    .services-center {
        grid-template-columns: repeat(3, 1fr);
    }
}

/*
=============== 
Projects
===============
*/

.projects-text {
    width: 85vw;
    max-width: 30rem;
    margin: 0 auto;
}

.project {
    position: relative;
    background: var(--clr-primary-5);
    border-radius: var(--radius);
    margin-bottom: 2rem;
}

.project-info {
    text-align: center;
    color: var(--clr-white);
    position: absolute;
    /* place section in center */
    top: 50%;
    left: 50%;
    /* adjust such that the start of section begins at -50% of its contents */
    /* otherwise the top left corner of contents will be in center, rather than the center of contents being in center */
    transform: translate(-50%, -50%);
    transition: var(--transition);
    /* hide project info if not hovering */
    opacity: 0;
}

.project-info p {
    text-transform: capitalize;
    /* paragraphs already specifically styled grey in globals. */
    /* therefore color property being set in parent project info will not apply to its child p */
    color: var(--clr-white);
}

/* display the project info */
.project:hover .project-info {
    opacity: 1;
}

.project-img {
    transition: var(--transition);
    border-radius: var(--radius);
    height: 15rem;
    /* fixing distortion below that resulted from forcing aspect ratio */
    -o-object-fit: cover;
    object-fit: cover;
}

/* background in .project is a yellow color, so when it becomes transparent it will make image yellow */
.project:hover .project-img {
    opacity: 0.1;
}

.project::after {
    /* setting content is important, even if just an empty string */
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0.25rem solid var(--clr-white);
    border-radius: var(--radius);
    transition: var(--transition);
    opacity: 0;
}

/* below does not work */
/* .project:hover .project::after{} */

/* proper syntax: */
.project:hover::after {
    opacity: 1;
    /* shrinks the border set above down to 0.8 of the size */
    transform: scale(0.8);
}

@media screen and (min-width: 676px) {
    .projects-center {
        display: grid;
        grid-template-columns: 1fr 1fr;
        -moz-column-gap: 2rem;
        column-gap: 2rem;
    }
}

@media screen and (min-width: 992px) {
    .projects-center {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media screen and (min-width: 1170px) {
    .projects-center {
        grid-template-rows: 200px 200px;
        gap: 1rem;
        grid-template-areas:
            "a b b"
            "a c d";
    }
    .project-img {
        /* height is hardcoded elsewhere so needs to be reset */
        height: 100%;
    }
    .project {
        /* height of project <a> link which contains the project-img also needs to be set */
        height: 100%;
    }
    .project-1 {
        grid-area: b;
    }
    .project-2 {
        grid-area: a;
    }
    .project-3 {
        grid-area: c;
    }
    .project-4 {
        grid-area: d;
    }
}

/*
=============== 
Connect
===============
*/

.connect {
    min-height: 40vh;
    position: relative;
    padding: 10rem 0 5rem 0;
    margin: 5rem;
}

.video-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    -o-object-fit: cover;
    object-fit: cover;
    z-index: -2;
}

.connect::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--clr-white);
    opacity: 0.7;
    z-index: -1;
}

.connect {
    display: grid;
    place-items: center;
}

.video-banner .section-title {
    margin-bottom: 2rem;
}

.video-text {
    max-width: 30rem;
}

.video-banner {
    background: var(--clr-primary-10);
    padding: 3rem 5rem 12rem 5rem;
    text-align: center;

    -webkit-clip-path: polygon(
        0% 0%,
        100% 0%,
        100% 75%,
        75% 75%,
        75% 100%,
        50% 75%,
        0% 75%
    );

    clip-path: polygon(
        0% 0%,
        100% 0%,
        100% 75%,
        75% 75%,
        75% 100%,
        50% 75%,
        0% 75%
    );
    /* clip-path: polygon(50% 0, 100% 15%, 100% 85%, 50% 100%, 0 85%, 0 15%); */
}

/*
=============== 
Skills
===============
*/

@media screen and (min-width: 768px) {
    .skills-center {
        display: grid;
        grid-template-columns: 1fr 1fr;
        -moz-column-gap: 2rem;
        column-gap: 2rem;
    }
}

.skills {
    background: var(--clr-primary-9);
}

.skills h3 {
    margin: 1.5rem 0;
    color: var(--clr-primary-1);
}

.skill {
    margin-bottom: 1.25rem;
}

.skill p {
    margin-bottom: 0.5rem;
    text-transform: capitalize;
    color: var(--clr-primary-1);
}

.skill-container {
    background: var(--clr-white);
    height: 1rem;
    width: 100%;
    border-radius: var(--radius);
    position: relative;
}

.skill-value {
    position: absolute;
    top: 0;
    left: 0;
    background: var(--clr-primary-5);
    height: 100%;
    width: 50%;
    border-radius: var(--radius);
}

.value-70 {
    width: 70%;
}

.value-80 {
    width: 80%;
}

.skill-text {
    position: absolute;
    top: -2rem;
    left: 50%;
    transform: translateX(-50%);
}

.skill-text-70 {
    left: 70%;
}

.skill-text-80 {
    left: 80%;
}

.skill-container {
    background: var(--clr-white);
    height: 1rem;
    width: 100%;
    border-radius: var(--radius);
}

/*
=============== 
Timeline
===============
*/
.timeline-center {
    width: 80%;
    max-width: 40rem;
}

.timeline-item {
    border-top: 2px dashed var(--clr-primary-5);
    margin: 0;
    padding: 4rem 2rem;
    position: relative;
}

.timeline p {
    margin-bottom: 0;
}

.timeline-item:nth-child(even) {
    border-left: 2px dashed var(--clr-primary-5);
    border-top-left-radius: 2rem;
    border-bottom-left-radius: 2rem;
    margin-right: 2rem;
    padding-right: 0;
}
.timeline-item:nth-child(odd) {
    border-right: 2px dashed var(--clr-primary-5);
    border-top-right-radius: 2rem;
    border-bottom-right-radius: 2rem;
    margin-left: 2rem;
    padding-left: 0;
}

.timeline-item:first-child {
    border-top: 0;
    border-top-right-radius: 0;
}

.timeline-item:last-child {
    border-bottom-left-radius: 0;
}

.number {
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    margin-bottom: 0;
    background: var(--clr-primary-5);
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    display: grid;
    place-items: center;
    color: var(--clr-primary-1);
    font-weight: bold;
}

.timeline-item:nth-child(even) .number {
    left: 0;
}

.timeline-item:nth-child(odd) .number {
    right: 0;
    transform: translate(50%, -50%);
}

/* .timeline-item:nth-child(odd) {
    border-right: 2px dashed var(--clr-primary-5);
} */

/*
=============== 
Blog
===============
*/

.blog {
    background: var(--clr-grey-10);
}

.card {
    height: 27rem;
    position: relative;
    /* talk later */
    perspective: 1500px;
}

.card-front {
    background: var(--clr-white);
}

.card-back {
    background: var(--clr-primary-10);
    transform: rotateY(180deg);
    display: grid;
    place-items: center;
}

.card-side {
    transition: all 2s linear;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: var(--radius);
    /* tutorial said to add the below line of code, but it caused a UI error where the back face became visible*/
    /* -webkit-transform: translate3d(0, 0, 0); */
    visibility: visible;
}

.card:hover .card-front {
    transform: rotateY(-180deg);
}

.card:hover .card-back {
    transform: rotateY(0);
}

/* rest of the styles */
.card-info {
    padding: 1rem 1.5rem;
}
.card-front img {
    height: 13rem;
    -o-object-fit: cover;
    object-fit: cover;
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
}

.card-footer {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
}

.card-footer img {
    width: 2rem;
    height: 2rem;
    -o-object-fit: cover;
    object-fit: cover;
    border-radius: 50%;
}

.card-footer p {
    margin: 0;
    text-transform: uppercase;
    justify-self: end;
    color: var(--clr-primary-5);
    font-size: 0.85rem;
}

.blog-center {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));
    gap: 3rem 1rem;
}

/*
=============== 
Footer
===============
*/
.footer {
    padding-bottom: 2rem;
    background: #222;
    display: grid;
    place-items: center;
}
.footer .social-icons {
    margin-bottom: 2rem;
}
.footer .social-icon {
    color: var(--clr-primary-5);
}
.footer .social-icon:hover {
    color: var(--clr-primary-10);
}
.footer p {
    font-size: 1.25rem;
    text-transform: capitalize;
}

/*
=============== 
Single Page
===============
*/
.single-page {
    background: var(--clr-primary-10);
    min-height: calc(100vh - 5rem);
}
.page-info {
    max-width: 700px;
}
.page-info a {
    text-transform: uppercase;
    color: var(--clr-primary-5);
    transition: var(--transition);
}
.page-info a:hover {
    color: var(--clr-primary-1);
}

/*
=============== 
Products Page
===============
*/

/* his code */

/* .projects-hero {
    height: 40vh;
    background: var(--clr-primary-10);
    display: grid;
    place-items: center;
}
.projects-hero .section-title {
    margin-bottom: 0;
}
.single-project {
    background: var(--clr-grey-10);
    border-radius: var(--radius);
}
.project-container img {
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
}
.project-container {
    position: relative;
}
.project-icon {
    position: absolute;
    font-size: 1.75rem;
    bottom: 0;
    left: 50%;
    -webkit-transform: translate(-50%, 50%);
    transform: translate(-50%, 50%);
    width: 4rem;
    height: 4rem;
    display: grid;
    place-items: center;
    background: var(--clr-primary-5);
    border-radius: 50%;
    color: var(--clr-primary-1);
    border: 0.375rem solid var(--clr-grey-10);
}
.project-details {
    padding: 2rem 1.5rem;
}
.project-footer {
    display: grid;
    grid-template-columns: 1fr 1fr;
    color: var(--clr-primary-5);
}
.project-footer a {
    color: var(--clr-primary-5);
    text-transform: capitalize;
    -webkit-transition: var(--transition);
    transition: var(--transition);
    justify-self: end;
}
.project-footer a:hover {
    color: var(--clr-primary-1);
}
.projects-page-center {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));
    gap: 3rem 1rem;
} */

/* my code */

.projects-hero {
    height: 40vh;
    background: var(--clr-primary-10);
    display: grid;
    place-items: center;
}

.projects-hero .section-title {
    margin-bottom: 0;
}

.single-project {
    background: var(--clr-grey-10);
    border-radius: var(--radius);
}

.project-container img {
    border-top-left-radius: var(--radius);
    border-top-right-radius: var(--radius);
}

.project-container {
    position: relative;
}

.project-icon {
    position: absolute;
    font-size: 1.75rem;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%);
    width: 4rem;
    height: 4rem;
    display: grid;
    place-items: center;
    background: var(--clr-primary-5);
    border-radius: 50%;
    color: var(--clr-primary-1);
    border: 0.375rem solid var(--clr-grey-10);
}

.project-details {
    padding: 2rem 1.5rem;
}

.project-footer {
    display: grid;
    grid-template-columns: 1fr 1fr;
    color: var(--clr-primary-5);
}

.project-footer a {
    color: var(--clr-primary-5);
    text-transform: capitalize;
    transition: var(--transition);
    justify-self: end;
}

.project-footer a:hover {
    color: var(--clr-primary-1);
}

.projects-page-center {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(330px, 1fr));
    gap: 3rem 1rem;
}
